{"version":3,"file":"config.view-DMuj5PBW.js","sources":["../../../ai-client/src/api/sdk.gen.ts","../../../ai-client/src/views/config.view.ts"],"sourcesContent":["// This file is auto-generated by @hey-api/openapi-ts\n\nimport type {\n  Options as ClientOptions,\n  TDataShape,\n  Client,\n} from \"@hey-api/client-fetch\";\nimport type {\n  AiTranslateTranslatorsData,\n  AiTranslateTranslatorsResponses,\n} from \"./types.gen\";\nimport { client as _heyApiClient } from \"./client.gen\";\n\nexport type Options<\n  TData extends TDataShape = TDataShape,\n  ThrowOnError extends boolean = boolean,\n> = ClientOptions<TData, ThrowOnError> & {\n  /**\n   * You can provide a client instance returned by `createClient()` instead of\n   * individual options. This might be also useful if you want to implement a\n   * custom client.\n   */\n  client?: Client;\n  /**\n   * You can pass arbitrary values through the `meta` object. This can be\n   * used to access values that aren't defined as part of the SDK function.\n   */\n  meta?: Record<string, unknown>;\n};\n\nexport class AiTranslate {\n  public static aiTranslateTranslators<ThrowOnError extends boolean = true>(\n    options?: Options<AiTranslateTranslatorsData, ThrowOnError>,\n  ) {\n    return (options?.client ?? _heyApiClient).get<\n      AiTranslateTranslatorsResponses,\n      unknown,\n      ThrowOnError\n    >({\n      url: \"/umbraco/tm-ai/api/v1/Translators\",\n      ...options,\n    });\n  }\n}\n","import {\r\n  JUMOO_TM_CONNECTOR_SETTINGS_CONTEXT,\r\n  TranslationConnectorConfigElement,\r\n  TranslationConnectorConfigElementBase,\r\n  TranslationConnectorSettingsContext,\r\n} from \"@jumoo/translate\";\r\nimport {\r\n  css,\r\n  customElement,\r\n  html,\r\n  nothing,\r\n  state,\r\n  when,\r\n} from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { AiTranslate, AiTranslatorView } from \"../api\";\r\nimport { ManifestAITranslatorConfig } from \"../translators\";\r\n//import { OpenAiTranslate } from \"../api\";\r\n\r\n@customElement(\"jumoo-ai-config\")\r\nexport class TranslationAiConnectorConfigElement\r\n  extends TranslationConnectorConfigElementBase\r\n  implements TranslationConnectorConfigElement\r\n{\r\n  #context?: TranslationConnectorSettingsContext;\r\n\r\n  @state()\r\n  translators?: Array<AiTranslatorView>;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.consumeContext(JUMOO_TM_CONNECTOR_SETTINGS_CONTEXT, (_context) => {\r\n      this.#context = _context;\r\n      console.debug(this.#context);\r\n    });\r\n  }\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    this.translators = (await AiTranslate.aiTranslateTranslators()).data;\r\n    console.log(\"T\", this.translators);\r\n\r\n    //const models = await OpenAiTranslate.AiTranslateModels();\r\n    //console.log(models);\r\n  }\r\n\r\n  onConfigUpdate(e: CustomEvent) {\r\n    this.#context?.update({ [e.detail.name]: e.detail.value });\r\n  }\r\n\r\n  @state()\r\n  advancedExpanded: boolean = true;\r\n\r\n  @state()\r\n  promptExpanded: boolean = true;\r\n\r\n  render() {\r\n    return html` <umb-body-layout>\r\n      <div class=\"layout\">\r\n        <div class=\"left\">\r\n          <uui-box>\r\n            <p>\r\n              In order to use an AI Translation API, you will need to supply an\r\n              API Key.\r\n            </p>\r\n          </uui-box>\r\n          <uui-box>\r\n            <div slot=\"headline\">AI Translation Api</div>\r\n            <div>\r\n              ${this.renderService()} ${this.renderConfigView()}\r\n              ${this.renderThrottle()} ${this.renderSplitOption()}\r\n              ${this.renderSendAsHtmlOption()}\r\n            </div>\r\n          </uui-box>\r\n          <uui-box class=\"${this.advancedExpanded ? \"\" : \"collapsed\"}\">\r\n            <div\r\n              class=\"headline\"\r\n              slot=\"headline\"\r\n              @click=${() => (this.advancedExpanded = !this.advancedExpanded)}\r\n            >\r\n              Advanced Options\r\n            </div>\r\n            ${when(\r\n              this.advancedExpanded,\r\n              () =>\r\n                html`<div>\r\n                  ${this.renderModel()}${this.renderMaxTokens()}\r\n                  ${this.renderTemperature()}${this.renderFrequencyPenalty()}\r\n                  ${this.renderPresencePenalty()}${this.renderNucleusSamplingFactor()}\r\n                  ${this.renderConversationId()}${this.renderInstructions()}\r\n                  ${this.renderSeed()}${this.renderTopK()}\r\n                </div>`\r\n            )}\r\n          </uui-box>\r\n          <uui-box class=\"${this.promptExpanded ? \"\" : \"collapsed\"}\"\r\n            ><div\r\n              class=\"headline\"\r\n              slot=\"headline\"\r\n              @click=${() => (this.promptExpanded = !this.promptExpanded)}\r\n            >\r\n              Prompt\r\n            </div>\r\n            ${when(\r\n              this.promptExpanded,\r\n              () => html`<div>${this.renderPrompt()}</div>`\r\n            )}</uui-box\r\n          >\r\n        </div>\r\n      </div>\r\n    </umb-body-layout>`;\r\n  }\r\n\r\n  renderService() {\r\n    const options = this.translators\r\n      ?.map((translator) => {\r\n        if (!translator?.name) return undefined;\r\n\r\n        return {\r\n          name: translator.name,\r\n          value: translator.alias,\r\n          selected: translator.alias == this.settings?.translator,\r\n        };\r\n      })\r\n      .filter((x) => x !== undefined);\r\n\r\n    if (!options)\r\n      return html`<h2>...${JSON.stringify(this.translators, null, 1)}</h2>`;\r\n\r\n    return html`<umb-property-layout\r\n      label=${this.localize.term(\"ai_library\")}\r\n      description=${this.localize.term(\"ai_libraryDescription\")}\r\n    >\r\n      <div slot=\"editor\">\r\n        <uui-select\r\n          placeholder=\"Select an option\"\r\n          .options=${options}\r\n          id=\"translator\"\r\n          @change=${this.onUpdateOption}\r\n        ></uui-select></div\r\n    ></umb-property-layout>`;\r\n  }\r\n\r\n  renderConfigView(suffix?: string) {\r\n    if (!this.settings?.translator) return nothing;\r\n\r\n    return html`\r\n      <umb-extension-slot\r\n        type=\"jumoo-tm-ai-translator\"\r\n        .filter=${(ext: ManifestAITranslatorConfig) =>\r\n          ext.alias == `${this.settings?.translator}${suffix ?? \"\"}`}\r\n        .props=${{\r\n          settings: this.settings,\r\n        }}\r\n        @ai-translator-config-update=${this.onConfigUpdate}\r\n      ></umb-extension-slot>\r\n    `;\r\n  }\r\n\r\n  renderThrottle() {\r\n    const throttle = this.settings?.throttle || 250;\r\n\r\n    return html` <umb-property-layout\r\n      label=${this.localize.term(\"ai_throttle\")}\r\n      description=${this.localize.term(\"ai_throttleDescription\")}\r\n    >\r\n      <div slot=\"editor\">\r\n        <uui-input\r\n          id=\"throttle\"\r\n          value=${throttle}\r\n          label=\"throttle (ms)\"\r\n          @change=${this.onUpdateOption}\r\n        ></uui-input>\r\n      </div>\r\n    </umb-property-layout>`;\r\n  }\r\n\r\n  renderSplitOption() {\r\n    return html` <umb-property-layout\r\n      label=${this.localize.term(\"ai_split\")}\r\n      description=${this.localize.term(\"ai_splitDescription\")}\r\n    >\r\n      <div slot=\"editor\">\r\n        <uui-checkbox\r\n          label=\"Split Html\"\r\n          id=\"split\"\r\n          .checked=${(this.settings?.split as boolean) ?? false}\r\n          @change=${this.onUpdateOption}\r\n        >\r\n        </uui-checkbox>\r\n      </div>\r\n    </umb-property-layout>`;\r\n  }\r\n\r\n  renderSendAsHtmlOption() {\r\n    return html` <umb-property-layout\r\n      label=${this.localize.term(\"ai_sendAsHtml\")}\r\n      description=${this.localize.term(\"ai_sendAsHtmlDescription\")}\r\n    >\r\n      <div slot=\"editor\">\r\n        <uui-checkbox\r\n          id=\"asHtml\"\r\n          label=\"Send as HTML\"\r\n          .checked=${(this.settings?.asHtml as boolean) ?? false}\r\n          @change=${this.onUpdateOption}\r\n        >\r\n        </uui-checkbox>\r\n      </div>\r\n    </umb-property-layout>`;\r\n  }\r\n\r\n  renderModel() {\r\n    return html`<umb-property-layout\r\n      label=${this.localize.term(\"ai_model\")}\r\n      description=${this.localize.term(\"ai_modelDescription\")}\r\n    >\r\n      <div slot=\"editor\">\r\n        <uui-input\r\n          id=\"model\"\r\n          label=\"Model\"\r\n          value=${(this.settings?.model as string) ?? \"gpt-4o-mini\"}\r\n          @change=${this.onUpdateOption}\r\n        >\r\n        </uui-input>\r\n      </div>\r\n    </umb-property-layout>`;\r\n  }\r\n\r\n  renderMaxTokens() {\r\n    return html`<umb-property-layout\r\n      label=${this.localize.term(\"ai_maxTokens\")}\r\n      description=${this.localize.term(\"ai_maxTokensDescription\")}\r\n    >\r\n      <div slot=\"editor\">\r\n        <uui-input\r\n          id=\"maxTokens\"\r\n          label=\"MaxTokens\"\r\n          type=\"number\"\r\n          value=${(this.settings?.maxTokens as number) ?? 500}\r\n          @change=${this.onUpdateOption}\r\n          min=\"0\"\r\n        >\r\n        </uui-input>\r\n      </div>\r\n    </umb-property-layout>`;\r\n  }\r\n\r\n  renderTemperature() {\r\n    return html`<umb-property-layout\r\n      label=${this.localize.term(\"ai_temperature\")}\r\n      description=${this.localize.term(\"ai_temperatureDescription\")}\r\n    >\r\n      <div slot=\"editor\">\r\n        <uui-input\r\n          id=\"temperature\"\r\n          label=\"Temperature\"\r\n          type=\"number\"\r\n          step=\"0.1\"\r\n          min=\"0\"\r\n          max=\"2\"\r\n          value=${(this.settings?.temperature as number) ?? 1}\r\n          @change=${this.onUpdateOption}\r\n        >\r\n        </uui-input>\r\n      </div>\r\n    </umb-property-layout>`;\r\n  }\r\n\r\n  renderFrequencyPenalty() {\r\n    return html`<umb-property-layout\r\n      label=${this.localize.term(\"ai_frequencyPenalty\")}\r\n      description=${this.localize.term(\"ai_frequencyPenaltyDescription\")}\r\n    >\r\n      <div slot=\"editor\">\r\n        <uui-input\r\n          id=\"frequencyPenalty\"\r\n          label=\"FrequencyPenalty\"\r\n          type=\"number\"\r\n          step=\"0.1\"\r\n          min=\"-2\"\r\n          max=\"2\"\r\n          value=${(this.settings?.frequencyPenalty as number) ?? 0.0}\r\n          @change=${this.onUpdateOption}\r\n        >\r\n        </uui-input>\r\n      </div>\r\n    </umb-property-layout>`;\r\n  }\r\n\r\n  renderPresencePenalty() {\r\n    return html`<umb-property-layout\r\n      label=${this.localize.term(\"ai_presencePenalty\")}\r\n      description=${this.localize.term(\"ai_presencePenaltyDescription\")}\r\n    >\r\n      <div slot=\"editor\">\r\n        <uui-input\r\n          id=\"presencePenalty\"\r\n          label=\"PresencePenalty\"\r\n          type=\"number\"\r\n          step=\"0.1\"\r\n          min=\"-2\"\r\n          max=\"2\"\r\n          value=${(this.settings?.presencePenalty as number) ?? 0.0}\r\n          @change=${this.onUpdateOption}\r\n        >\r\n        </uui-input>\r\n      </div>\r\n    </umb-property-layout>`;\r\n  }\r\n\r\n  renderNucleusSamplingFactor() {\r\n    return html`<umb-property-layout\r\n      label=${this.localize.term(\"ai_nucleusSampling\")}\r\n      description=${this.localize.term(\"ai_nucleusSamplingDescription\")}\r\n    >\r\n      <div slot=\"editor\">\r\n        <uui-input\r\n          id=\"nucleusSampling\"\r\n          label=\"NucleusSampling\"\r\n          type=\"number\"\r\n          value=${(this.settings?.nucleusSampling as number) ?? 1}\r\n          @change=${this.onUpdateOption}\r\n          min=\"0\"\r\n          max=\"1\"\r\n          step=\"0.01\"\r\n        >\r\n        </uui-input>\r\n      </div>\r\n    </umb-property-layout>`;\r\n  }\r\n\r\n  renderPrompt() {\r\n    return html` <umb-property-layout\r\n      .label=${this.localize.term(\"ai_prompt\")}\r\n      .description=${this.localize.term(\"ai_promptDescription\")}\r\n      ><div slot=\"editor\">\r\n        <uui-textarea\r\n          id=\"prompt\"\r\n          label=\"Prompt\"\r\n          .value=${(this.settings?.prompt as string) ??\r\n          \"You will be provided with sentences in {sourceLang}, and your task is to translate it into {targetLang}\"}\r\n          @change=${this.onUpdateOption}\r\n          rows=\"5\"\r\n        ></uui-textarea>\r\n      </div>\r\n    </umb-property-layout>`;\r\n  }\r\n\r\n  // renderToolCalls() {\r\n  //   return html` <umb-property-layout\r\n  //     label=${this.localize.term(\"ai_toolCalls\")}\r\n  //     description=${this.localize.term(\"ai_toolCallsDescription\")}\r\n  //   >\r\n  //     <div slot=\"editor\">\r\n  //       <uui-checkbox\r\n  //         label=\"Allow Multiple Tool Calls\"\r\n  //         id=\"allowMultipleToolCalls\"\r\n  //         .checked=${(this.settings?.allowMultipleToolCalls as boolean) ??\r\n  //         false}\r\n  //         @change=${this.onUpdateOption}\r\n  //       >\r\n  //       </uui-checkbox>\r\n  //     </div>\r\n  //   </umb-property-layout>`;\r\n  // }\r\n\r\n  renderConversationId() {\r\n    return html`<umb-property-layout\r\n      label=${this.localize.term(\"ai_conversationId\")}\r\n      description=${this.localize.term(\"ai_conversationIdDescription\")}\r\n    >\r\n      <div slot=\"editor\">\r\n        <uui-input\r\n          id=\"conversationId\"\r\n          label=\"Conversation ID\"\r\n          value=${(this.settings?.conversationId as string) ?? \"\"}\r\n          @change=${this.onUpdateOption}\r\n        >\r\n        </uui-input>\r\n      </div>\r\n    </umb-property-layout>`;\r\n  }\r\n\r\n  renderInstructions() {\r\n    return html`<umb-property-layout\r\n      label=${this.localize.term(\"ai_instructions\")}\r\n      description=${this.localize.term(\"ai_instructionsDescription\")}\r\n    >\r\n      <div slot=\"editor\">\r\n        <uui-input\r\n          id=\"instructions\"\r\n          label=\"Instructions\"\r\n          value=${(this.settings?.instructions as string) ?? \"\"}\r\n          @change=${this.onUpdateOption}\r\n        >\r\n        </uui-input>\r\n      </div>\r\n    </umb-property-layout>`;\r\n  }\r\n\r\n  renderTopK() {\r\n    return html`<umb-property-layout\r\n      label=${this.localize.term(\"ai_topK\")}\r\n      description=${this.localize.term(\"ai_topKDescription\")}\r\n    >\r\n      <div slot=\"editor\">\r\n        <uui-input\r\n          id=\"topK\"\r\n          label=\"TopK\"\r\n          type=\"number\"\r\n          value=${(this.settings?.topK as number) ?? 1}\r\n          @change=${this.onUpdateOption}\r\n        >\r\n        </uui-input>\r\n      </div>\r\n    </umb-property-layout>`;\r\n  }\r\n\r\n  renderSeed() {\r\n    return html`<umb-property-layout\r\n      label=${this.localize.term(\"ai_seed\")}\r\n      description=${this.localize.term(\"ai_seedDescription\")}\r\n    >\r\n      <div slot=\"editor\">\r\n        <uui-input\r\n          id=\"seed\"\r\n          label=\"Seed\"\r\n          type=\"number\"\r\n          value=${(this.settings?.seed as number) ?? null}\r\n          @change=${this.onUpdateOption}\r\n        >\r\n        </uui-input>\r\n      </div>\r\n    </umb-property-layout>`;\r\n  }\r\n\r\n  static styles = css`\r\n    .layout {\r\n      display: flex;\r\n      gap: var(--uui-size-space-5);\r\n    }\r\n\r\n    .left,\r\n    .right {\r\n      display: flex;\r\n      flex-direction: column;\r\n      flex-grow: 1;\r\n      gap: var(--uui-size-space-5);\r\n    }\r\n\r\n    .right {\r\n      flex-basis: 30%;\r\n      max-width: 325px;\r\n    }\r\n\r\n    .collapsed {\r\n      --uui-box-default-padding: 0;\r\n    }\r\n\r\n    uui-box .headline {\r\n      cursor: pointer;\r\n    }\r\n\r\n    @media screen and (max-width: 1280px) {\r\n      .layout {\r\n        flex-direction: column;\r\n      }\r\n      .layout > div {\r\n        max-width: 100%;\r\n      }\r\n    }\r\n\r\n    uui-input,\r\n    uui-select {\r\n      width: 100%;\r\n    }\r\n  `;\r\n}\r\n\r\nexport default TranslationAiConnectorConfigElement;\r\n"],"names":["AiTranslate","options","_heyApiClient","_context","TranslationAiConnectorConfigElement","TranslationConnectorConfigElementBase","__privateAdd","JUMOO_TM_CONNECTOR_SETTINGS_CONTEXT","__privateSet","__privateGet","_a","html","when","translator","x","suffix","ext","nothing","throttle","css","__decorateClass","state","customElement","TranslationAiConnectorConfigElement$1"],"mappings":"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"}