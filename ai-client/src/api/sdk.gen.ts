// This file is auto-generated by @hey-api/openapi-ts

import type {
  Options as ClientOptions,
  TDataShape,
  Client,
} from "@hey-api/client-fetch";
import type {
  AiTranslateDefaultsData,
  AiTranslateDefaultsResponses,
  AiTranslateTranslatorsData,
  AiTranslateTranslatorsResponses,
} from "./types.gen";
import { client as _heyApiClient } from "./client.gen";

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

export class AiTranslate {
  public static aiTranslateDefaults<ThrowOnError extends boolean = true>(
    options?: Options<AiTranslateDefaultsData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      AiTranslateDefaultsResponses,
      unknown,
      ThrowOnError
    >({
      url: "/umbraco/tm-ai/api/v1/Defaults",
      ...options,
    });
  }

  public static aiTranslateTranslators<ThrowOnError extends boolean = true>(
    options?: Options<AiTranslateTranslatorsData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      AiTranslateTranslatorsResponses,
      unknown,
      ThrowOnError
    >({
      url: "/umbraco/tm-ai/api/v1/Translators",
      ...options,
    });
  }
}
